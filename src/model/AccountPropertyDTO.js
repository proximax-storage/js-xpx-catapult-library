/*
 * Copyright 2019 NEM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Catapult REST API Reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.12
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The AccountPropertyDTO model module.
* @module model/AccountPropertyDTO
* @version 1.0.12
*/
export default class AccountPropertyDTO {
    /**
    * Constructs a new <code>AccountPropertyDTO</code>.
    * @alias module:model/AccountPropertyDTO
    * @class
    * @param propertyType {Number} 
    * @param values {Array.<Object>} 
    */

    constructor(propertyType, values) {
        

        
        

        this['propertyType'] = propertyType;this['values'] = values;

        
    }

    /**
    * Constructs a <code>AccountPropertyDTO</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/AccountPropertyDTO} obj Optional instance to populate.
    * @return {module:model/AccountPropertyDTO} The populated <code>AccountPropertyDTO</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccountPropertyDTO();

            
            
            

            if (data.hasOwnProperty('propertyType')) {
                obj['propertyType'] = ApiClient.convertToType(data['propertyType'], 'Number');
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = ApiClient.convertToType(data['values'], [Object]);
            }
        }
        return obj;
    }

    /**
    * @member {Number} propertyType
    */
    propertyType = undefined;
    /**
    * @member {Array.<Object>} values
    */
    values = undefined;








}


