// Copyright 2019 ProximaX Limited. All rights reserved.
// Use of this source code is governed by the Apache 2.0
// license that can be found in the LICENSE file

// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var Catapult = Catapult || {};

/**
 * @const
 * @namespace
 */
Catapult.Buffers = Catapult.Buffers || {};

/**
 * @constructor
 */
Catapult.Buffers.MetadataModificationBuffer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Catapult.Buffers.MetadataModificationBuffer}
 */
Catapult.Buffers.MetadataModificationBuffer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Catapult.Buffers.MetadataModificationBuffer=} obj
 * @returns {Catapult.Buffers.MetadataModificationBuffer}
 */
Catapult.Buffers.MetadataModificationBuffer.getRootAsMetadataModificationBuffer = function(bb, obj) {
  return (obj || new Catapult.Buffers.MetadataModificationBuffer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Catapult.Buffers.MetadataModificationBuffer.prototype.size = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Catapult.Buffers.MetadataModificationBuffer.prototype.modificationType = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Catapult.Buffers.MetadataModificationBuffer.prototype.keySize = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @returns {number}
 */
Catapult.Buffers.MetadataModificationBuffer.prototype.valueSize = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
Catapult.Buffers.MetadataModificationBuffer.prototype.valueSizeLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
Catapult.Buffers.MetadataModificationBuffer.prototype.valueSizeArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
Catapult.Buffers.MetadataModificationBuffer.prototype.key = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
Catapult.Buffers.MetadataModificationBuffer.prototype.keyLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
Catapult.Buffers.MetadataModificationBuffer.prototype.keyArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
Catapult.Buffers.MetadataModificationBuffer.prototype.value = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
Catapult.Buffers.MetadataModificationBuffer.prototype.valueLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
Catapult.Buffers.MetadataModificationBuffer.prototype.valueArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Catapult.Buffers.MetadataModificationBuffer.startMetadataModificationBuffer = function(builder) {
  builder.startObject(6);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} size
 */
Catapult.Buffers.MetadataModificationBuffer.addSize = function(builder, size) {
  builder.addFieldInt32(0, size, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} modificationType
 */
Catapult.Buffers.MetadataModificationBuffer.addModificationType = function(builder, modificationType) {
  builder.addFieldInt8(1, modificationType, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} keySize
 */
Catapult.Buffers.MetadataModificationBuffer.addKeySize = function(builder, keySize) {
  builder.addFieldInt8(2, keySize, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} valueSizeOffset
 */
Catapult.Buffers.MetadataModificationBuffer.addValueSize = function(builder, valueSizeOffset) {
  builder.addFieldOffset(3, valueSizeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
Catapult.Buffers.MetadataModificationBuffer.createValueSizeVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Catapult.Buffers.MetadataModificationBuffer.startValueSizeVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} keyOffset
 */
Catapult.Buffers.MetadataModificationBuffer.addKey = function(builder, keyOffset) {
  builder.addFieldOffset(4, keyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
Catapult.Buffers.MetadataModificationBuffer.createKeyVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Catapult.Buffers.MetadataModificationBuffer.startKeyVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} valueOffset
 */
Catapult.Buffers.MetadataModificationBuffer.addValue = function(builder, valueOffset) {
  builder.addFieldOffset(5, valueOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
Catapult.Buffers.MetadataModificationBuffer.createValueVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Catapult.Buffers.MetadataModificationBuffer.startValueVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Catapult.Buffers.MetadataModificationBuffer.endMetadataModificationBuffer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} size
 * @param {number} modificationType
 * @param {number} keySize
 * @param {flatbuffers.Offset} valueSizeOffset
 * @param {flatbuffers.Offset} keyOffset
 * @param {flatbuffers.Offset} valueOffset
 * @returns {flatbuffers.Offset}
 */
Catapult.Buffers.MetadataModificationBuffer.createMetadataModificationBuffer = function(builder, size, modificationType, keySize, valueSizeOffset, keyOffset, valueOffset) {
  Catapult.Buffers.MetadataModificationBuffer.startMetadataModificationBuffer(builder);
  Catapult.Buffers.MetadataModificationBuffer.addSize(builder, size);
  Catapult.Buffers.MetadataModificationBuffer.addModificationType(builder, modificationType);
  Catapult.Buffers.MetadataModificationBuffer.addKeySize(builder, keySize);
  Catapult.Buffers.MetadataModificationBuffer.addValueSize(builder, valueSizeOffset);
  Catapult.Buffers.MetadataModificationBuffer.addKey(builder, keyOffset);
  Catapult.Buffers.MetadataModificationBuffer.addValue(builder, valueOffset);
  return Catapult.Buffers.MetadataModificationBuffer.endMetadataModificationBuffer(builder);
}

/**
 * @constructor
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Catapult.Buffers.ModifyMetadataTransactionBuffer}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Catapult.Buffers.ModifyMetadataTransactionBuffer=} obj
 * @returns {Catapult.Buffers.ModifyMetadataTransactionBuffer}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.getRootAsModifyMetadataTransactionBuffer = function(bb, obj) {
  return (obj || new Catapult.Buffers.ModifyMetadataTransactionBuffer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.prototype.size = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @returns {number}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.prototype.signature = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.prototype.signatureLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.prototype.signatureArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.prototype.signer = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.prototype.signerLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.prototype.signerArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @returns {number}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.prototype.version = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.prototype.type = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @returns {number}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.prototype.maxFee = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readUint32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.prototype.maxFeeLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint32Array}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.prototype.maxFeeArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? new Uint32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.prototype.deadline = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.readUint32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.prototype.deadlineLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint32Array}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.prototype.deadlineArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? new Uint32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @returns {number}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.prototype.metadataType = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;
};

/**
 * In case of address it is 25 bytes array. In case of mosaic or namespace it is 8 byte array(or 2 uint32 array)
 *
 * @param {number} index
 * @returns {number}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.prototype.metadataId = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.prototype.metadataIdLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.prototype.metadataIdArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @param {Catapult.Buffers.MetadataModificationBuffer=} obj
 * @returns {Catapult.Buffers.MetadataModificationBuffer}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.prototype.modifications = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? (obj || new Catapult.Buffers.MetadataModificationBuffer).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.prototype.modificationsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.startModifyMetadataTransactionBuffer = function(builder) {
  builder.startObject(10);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} size
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.addSize = function(builder, size) {
  builder.addFieldInt32(0, size, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} signatureOffset
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.addSignature = function(builder, signatureOffset) {
  builder.addFieldOffset(1, signatureOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.createSignatureVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.startSignatureVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} signerOffset
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.addSigner = function(builder, signerOffset) {
  builder.addFieldOffset(2, signerOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.createSignerVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.startSignerVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} version
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.addVersion = function(builder, version) {
  builder.addFieldInt16(3, version, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} type
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.addType = function(builder, type) {
  builder.addFieldInt16(4, type, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} maxFeeOffset
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.addMaxFee = function(builder, maxFeeOffset) {
  builder.addFieldOffset(5, maxFeeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.createMaxFeeVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.startMaxFeeVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} deadlineOffset
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.addDeadline = function(builder, deadlineOffset) {
  builder.addFieldOffset(6, deadlineOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.createDeadlineVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.startDeadlineVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} metadataType
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.addMetadataType = function(builder, metadataType) {
  builder.addFieldInt8(7, metadataType, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} metadataIdOffset
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.addMetadataId = function(builder, metadataIdOffset) {
  builder.addFieldOffset(8, metadataIdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.createMetadataIdVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.startMetadataIdVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} modificationsOffset
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.addModifications = function(builder, modificationsOffset) {
  builder.addFieldOffset(9, modificationsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.createModificationsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.startModificationsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.endModifyMetadataTransactionBuffer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.finishModifyMetadataTransactionBufferBuffer = function(builder, offset) {
  builder.finish(offset);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} size
 * @param {flatbuffers.Offset} signatureOffset
 * @param {flatbuffers.Offset} signerOffset
 * @param {number} version
 * @param {number} type
 * @param {flatbuffers.Offset} maxFeeOffset
 * @param {flatbuffers.Offset} deadlineOffset
 * @param {number} metadataType
 * @param {flatbuffers.Offset} metadataIdOffset
 * @param {flatbuffers.Offset} modificationsOffset
 * @returns {flatbuffers.Offset}
 */
Catapult.Buffers.ModifyMetadataTransactionBuffer.createModifyMetadataTransactionBuffer = function(builder, size, signatureOffset, signerOffset, version, type, maxFeeOffset, deadlineOffset, metadataType, metadataIdOffset, modificationsOffset) {
  Catapult.Buffers.ModifyMetadataTransactionBuffer.startModifyMetadataTransactionBuffer(builder);
  Catapult.Buffers.ModifyMetadataTransactionBuffer.addSize(builder, size);
  Catapult.Buffers.ModifyMetadataTransactionBuffer.addSignature(builder, signatureOffset);
  Catapult.Buffers.ModifyMetadataTransactionBuffer.addSigner(builder, signerOffset);
  Catapult.Buffers.ModifyMetadataTransactionBuffer.addVersion(builder, version);
  Catapult.Buffers.ModifyMetadataTransactionBuffer.addType(builder, type);
  Catapult.Buffers.ModifyMetadataTransactionBuffer.addMaxFee(builder, maxFeeOffset);
  Catapult.Buffers.ModifyMetadataTransactionBuffer.addDeadline(builder, deadlineOffset);
  Catapult.Buffers.ModifyMetadataTransactionBuffer.addMetadataType(builder, metadataType);
  Catapult.Buffers.ModifyMetadataTransactionBuffer.addMetadataId(builder, metadataIdOffset);
  Catapult.Buffers.ModifyMetadataTransactionBuffer.addModifications(builder, modificationsOffset);
  return Catapult.Buffers.ModifyMetadataTransactionBuffer.endModifyMetadataTransactionBuffer(builder);
}

// Exports for Node.js and RequireJS
export default Catapult;
