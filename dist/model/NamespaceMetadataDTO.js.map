{"version":3,"sources":["../../src/model/NamespaceMetadataDTO.js"],"names":["NamespaceMetadataDTO","metadataType","fields","metadataId","undefined","data","obj","MetadataDTO","constructFromObject","hasOwnProperty","ApiClient","convertToType","UInt64DTO"],"mappings":";;;;;;;;AAkBA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;+eArBA;AACA;AACA;;AAEA;;;;;;;;;;;;;AAuBA;;;;;IAKqBA,oB;;;AACjB;;;;;;;;;;AAUA,kCAAYC,YAAZ,EAA0BC,MAA1B,EAAkCC,UAAlC,EAA8C;AAAA;;AAAA,gJAIpCF,YAJoC,EAItBC,MAJsB;;AAAA,cAuC9CD,YAvC8C,GAuC/BG,SAvC+B;AAAA,cA2C9CD,UA3C8C,GA2CjCC,SA3CiC;AAAA,cAkD9CH,YAlD8C,GAkD/BG,SAlD+B;AAAA,cAsD9CF,MAtD8C,GAsDrCE,SAtDqC;;;AAM1C,cAAK,YAAL,IAAqBD,UAArB;;AAN0C;AAS7C;;AAED;;;;;;;;;;;4CAO2BE,I,EAAMC,G,EAAK;AAClC,gBAAID,IAAJ,EAAU;AACNC,sBAAMA,OAAO,IAAIN,oBAAJ,EAAb;;AAIAO,sCAAYC,mBAAZ,CAAgCH,IAAhC,EAAsCC,GAAtC;;AAEA,oBAAID,KAAKI,cAAL,CAAoB,cAApB,CAAJ,EAAyC;AACrCH,wBAAI,cAAJ,IAAsBI,oBAAUC,aAAV,CAAwBN,KAAK,cAAL,CAAxB,EAA8C,QAA9C,CAAtB;AACH;AACD,oBAAIA,KAAKI,cAAL,CAAoB,YAApB,CAAJ,EAAuC;AACnCH,wBAAI,YAAJ,IAAoBM,oBAAUJ,mBAAV,CAA8BH,KAAK,YAAL,CAA9B,CAApB;AACH;AACJ;AACD,mBAAOC,GAAP;AACH;;AAED;;;;AAIA;;;;;AAMA;AACA;;;;AAIJ;;;;;;;EA9DkDC,qB;;kBAA7BP,oB","file":"NamespaceMetadataDTO.js","sourcesContent":["// Copyright 2019 ProximaX Limited. All rights reserved.\n// Use of this source code is governed by the Apache 2.0\n// license that can be found in the LICENSE file\n\n/**\n * Catapult REST API Reference\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.13\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport ApiClient from '../ApiClient';\nimport FieldDTO from './FieldDTO';\nimport MetadataDTO from './MetadataDTO';\nimport UInt64DTO from './UInt64DTO';\n\n\n\n\n\n/**\n* The NamespaceMetadataDTO model module.\n* @module model/NamespaceMetadataDTO\n* @version 1.0.13\n*/\nexport default class NamespaceMetadataDTO extends MetadataDTO {\n    /**\n    * Constructs a new <code>NamespaceMetadataDTO</code>.\n    * @alias module:model/NamespaceMetadataDTO\n    * @class\n    * @implements module:model/MetadataDTO\n    * @param metadataType {Number} \n    * @param fields {Array.<module:model/FieldDTO>} \n    * @param metadataId {module:model/UInt64DTO} \n    */\n\n    constructor(metadataType, fields, metadataId) {\n        \n\n        \n        super(metadataType, fields);\n\n        this['metadataId'] = metadataId;\n\n        \n    }\n\n    /**\n    * Constructs a <code>NamespaceMetadataDTO</code> from a plain JavaScript object, optionally creating a new instance.\n    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n    * @param {Object} data The plain JavaScript object bearing properties of interest.\n    * @param {module:model/NamespaceMetadataDTO} obj Optional instance to populate.\n    * @return {module:model/NamespaceMetadataDTO} The populated <code>NamespaceMetadataDTO</code> instance.\n    */\n    static constructFromObject(data, obj) {\n        if (data) {\n            obj = obj || new NamespaceMetadataDTO();\n\n            \n            \n            MetadataDTO.constructFromObject(data, obj);\n\n            if (data.hasOwnProperty('metadataType')) {\n                obj['metadataType'] = ApiClient.convertToType(data['metadataType'], 'Number');\n            }\n            if (data.hasOwnProperty('metadataId')) {\n                obj['metadataId'] = UInt64DTO.constructFromObject(data['metadataId']);\n            }\n        }\n        return obj;\n    }\n\n    /**\n    * @member {Number} metadataType\n    */\n    metadataType = undefined;\n    /**\n    * @member {module:model/UInt64DTO} metadataId\n    */\n    metadataId = undefined;\n\n\n    // Implement MetadataDTO interface:\n    /**\n    * @member {Number} metadataType\n    */\n    metadataType = undefined;\n/**\n    * @member {Array.<module:model/FieldDTO>} fields\n    */\n    fields = undefined;\n\n\n\n\n\n\n\n}\n"]}