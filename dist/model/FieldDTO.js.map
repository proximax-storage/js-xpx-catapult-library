{"version":3,"sources":["../../src/model/FieldDTO.js"],"names":["FieldDTO","key","value","undefined","data","obj","hasOwnProperty","ApiClient","convertToType"],"mappings":";;;;;;qjBAAA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;;;AAcA;;;;;;;;AAMA;;;;;IAKqBA,Q;AACjB;;;;;;;;AAQA,sBAAYC,GAAZ,EAAiBC,KAAjB,EAAwB;AAAA;;AAAA,aAuCxBD,GAvCwB,GAuClBE,SAvCkB;AAAA,aA2CxBD,KA3CwB,GA2ChBC,SA3CgB;;;AAMpB,aAAK,KAAL,IAAcF,GAAd,CAAkB,KAAK,OAAL,IAAgBC,KAAhB;AAGrB;;AAED;;;;;;;;;;;4CAO2BE,I,EAAMC,G,EAAK;AAClC,gBAAID,IAAJ,EAAU;AACNC,sBAAMA,OAAO,IAAIL,QAAJ,EAAb;;AAMA,oBAAII,KAAKE,cAAL,CAAoB,KAApB,CAAJ,EAAgC;AAC5BD,wBAAI,KAAJ,IAAaE,oBAAUC,aAAV,CAAwBJ,KAAK,KAAL,CAAxB,EAAqC,QAArC,CAAb;AACH;AACD,oBAAIA,KAAKE,cAAL,CAAoB,OAApB,CAAJ,EAAkC;AAC9BD,wBAAI,OAAJ,IAAeE,oBAAUC,aAAV,CAAwBJ,KAAK,OAAL,CAAxB,EAAuC,QAAvC,CAAf;AACH;AACJ;AACD,mBAAOC,GAAP;AACH;;AAED;;;;AAIA;;;;;;;;;kBAjDiBL,Q","file":"FieldDTO.js","sourcesContent":["/*\n * Copyright 2019 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Catapult REST API Reference\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.13\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport ApiClient from '../ApiClient';\n\n\n\n\n\n/**\n* The FieldDTO model module.\n* @module model/FieldDTO\n* @version 1.0.13\n*/\nexport default class FieldDTO {\n    /**\n    * Constructs a new <code>FieldDTO</code>.\n    * @alias module:model/FieldDTO\n    * @class\n    * @param key {Number} \n    * @param value {Number} \n    */\n\n    constructor(key, value) {\n        \n\n        \n        \n\n        this['key'] = key;this['value'] = value;\n\n        \n    }\n\n    /**\n    * Constructs a <code>FieldDTO</code> from a plain JavaScript object, optionally creating a new instance.\n    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n    * @param {Object} data The plain JavaScript object bearing properties of interest.\n    * @param {module:model/FieldDTO} obj Optional instance to populate.\n    * @return {module:model/FieldDTO} The populated <code>FieldDTO</code> instance.\n    */\n    static constructFromObject(data, obj) {\n        if (data) {\n            obj = obj || new FieldDTO();\n\n            \n            \n            \n\n            if (data.hasOwnProperty('key')) {\n                obj['key'] = ApiClient.convertToType(data['key'], 'Number');\n            }\n            if (data.hasOwnProperty('value')) {\n                obj['value'] = ApiClient.convertToType(data['value'], 'Number');\n            }\n        }\n        return obj;\n    }\n\n    /**\n    * @member {Number} key\n    */\n    key = undefined;\n    /**\n    * @member {Number} value\n    */\n    value = undefined;\n\n\n\n\n\n\n\n\n}\n"]}