{"version":3,"sources":["../../src/model/MetadataDTO.js"],"names":["MetadataDTO","metadataType","fields","undefined","data","obj","hasOwnProperty","ApiClient","convertToType","FieldDTO"],"mappings":";;;;;;qjBAAA;AACA;AACA;;AAEA;;;;;;;;;;;;;AAcA;;;;AACA;;;;;;;;AAMA;;;;;IAKqBA,W;AACjB;;;;;;;;AAQA,yBAAYC,YAAZ,EAA0BC,MAA1B,EAAkC;AAAA;;AAAA,aAuClCD,YAvCkC,GAuCnBE,SAvCmB;AAAA,aA2ClCD,MA3CkC,GA2CzBC,SA3CyB;;;AAM9B,aAAK,cAAL,IAAuBF,YAAvB,CAAoC,KAAK,QAAL,IAAiBC,MAAjB;AAGvC;;AAED;;;;;;;;;;;4CAO2BE,I,EAAMC,G,EAAK;AAClC,gBAAID,IAAJ,EAAU;AACNC,sBAAMA,OAAO,IAAIL,WAAJ,EAAb;;AAMA,oBAAII,KAAKE,cAAL,CAAoB,cAApB,CAAJ,EAAyC;AACrCD,wBAAI,cAAJ,IAAsBE,oBAAUC,aAAV,CAAwBJ,KAAK,cAAL,CAAxB,EAA8C,QAA9C,CAAtB;AACH;AACD,oBAAIA,KAAKE,cAAL,CAAoB,QAApB,CAAJ,EAAmC;AAC/BD,wBAAI,QAAJ,IAAgBE,oBAAUC,aAAV,CAAwBJ,KAAK,QAAL,CAAxB,EAAwC,CAACK,kBAAD,CAAxC,CAAhB;AACH;AACJ;AACD,mBAAOJ,GAAP;AACH;;AAED;;;;AAIA;;;;;;;;;kBAjDiBL,W","file":"MetadataDTO.js","sourcesContent":["// Copyright 2019 ProximaX Limited. All rights reserved.\n// Use of this source code is governed by the Apache 2.0\n// license that can be found in the LICENSE file\n\n/**\n * Catapult REST API Reference\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.13\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport ApiClient from '../ApiClient';\nimport FieldDTO from './FieldDTO';\n\n\n\n\n\n/**\n* The MetadataDTO model module.\n* @module model/MetadataDTO\n* @version 1.0.13\n*/\nexport default class MetadataDTO {\n    /**\n    * Constructs a new <code>MetadataDTO</code>.\n    * @alias module:model/MetadataDTO\n    * @class\n    * @param metadataType {Number} \n    * @param fields {Array.<module:model/FieldDTO>} \n    */\n\n    constructor(metadataType, fields) {\n        \n\n        \n        \n\n        this['metadataType'] = metadataType;this['fields'] = fields;\n\n        \n    }\n\n    /**\n    * Constructs a <code>MetadataDTO</code> from a plain JavaScript object, optionally creating a new instance.\n    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n    * @param {Object} data The plain JavaScript object bearing properties of interest.\n    * @param {module:model/MetadataDTO} obj Optional instance to populate.\n    * @return {module:model/MetadataDTO} The populated <code>MetadataDTO</code> instance.\n    */\n    static constructFromObject(data, obj) {\n        if (data) {\n            obj = obj || new MetadataDTO();\n\n            \n            \n            \n\n            if (data.hasOwnProperty('metadataType')) {\n                obj['metadataType'] = ApiClient.convertToType(data['metadataType'], 'Number');\n            }\n            if (data.hasOwnProperty('fields')) {\n                obj['fields'] = ApiClient.convertToType(data['fields'], [FieldDTO]);\n            }\n        }\n        return obj;\n    }\n\n    /**\n    * @member {Number} metadataType\n    */\n    metadataType = undefined;\n    /**\n    * @member {Array.<module:model/FieldDTO>} fields\n    */\n    fields = undefined;\n\n\n\n\n\n\n\n\n}\n"]}